{"version":3,"file":"static/js/156.9a8e37d8.chunk.js","mappings":"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","sources":["webpack://itkamasutra/./src/components/Common/Inputs/FormControl.module.css?c1da","components/Common/Inputs/FormControl.jsx","components/Common/Inputs/Input.jsx","webpack://itkamasutra/./src/components/Common/ValidationErrors.module.css?ba51","components/Common/ValidationErrors.jsx","webpack://itkamasutra/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://itkamasutra/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.jsx","webpack://itkamasutra/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/NewMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.jsx","utils/helpers/validatorMiddleware.js","utils/validators/requiredValidation.js","utils/validators/textLengthValidation.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControl_formControl__GJ1Si\",\"error\":\"FormControl_error__ERU1W\"};","import cssModule from \"./FormControl.module.css\";\r\nimport {ValidationErrors} from \"../ValidationErrors\";\r\n\r\nconst FormControl = ({field, form: { touched, errors }, ...props}) => {\r\n    let isErrorsDefined =  Object.keys(errors).length !== 0;\r\n    let isTouchDefined = Object.keys(touched).length !== 0;\r\n    let isFieldWithErrors = false;\r\n\r\n    if(isErrorsDefined) {\r\n        let isErrorDefinedInCurrentComponent =  typeof errors[field.name] !== typeof undefined;\r\n        if(isErrorDefinedInCurrentComponent)\r\n        {\r\n            if(isTouchDefined)\r\n            {\r\n                let isTouchDefinedInCurrentComponent =  typeof touched[field.name] !== typeof undefined;\r\n                if(isTouchDefinedInCurrentComponent)\r\n                    isFieldWithErrors =  Object.keys(errors[field.name]).length !== 0 ;\r\n            }\r\n        }\r\n\r\n    }\r\n    let style = isFieldWithErrors ? `${cssModule.formControl} ${cssModule.error}` :`${cssModule.formControl}`;\r\n    return (\r\n        <div className={style}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { isFieldWithErrors && <ValidationErrors errors={errors[field.name]}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormControl;","import cssModule from \"./Input.module.css\"\r\nimport FormControl from \"./FormControl\";\r\nimport {useState} from \"react\";\r\nconst Input = (props)  => {\r\n    return (\r\n        <FormControl {...props}>\r\n            <input  {...props.field} {...props}/>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"errorMessage\":\"ValidationErrors_errorMessage__xhD88\"};","import cssModule from \"./ValidationErrors.module.css\"\r\nexport const ValidationErrors = ({errors}) => {\r\n\r\n    let arrayOfErrorsText = [];\r\n    for (let error in errors)\r\n    {\r\n        arrayOfErrorsText.push(errors[error]);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          {\r\n              arrayOfErrorsText.map(x => {\r\n                  return (\r\n                      <div key={x} className={cssModule.errorMessage}>\r\n                        {x}\r\n                      </div>\r\n                  );\r\n              })\r\n          }\r\n      </div>\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__69CQo\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__VVn54\",\"active\":\"Dialog_active__W+Sw-\"};","import cssModule from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n    return (\r\n        <div className={cssModule.dialog}>\r\n            <NavLink to={path} className={(navData) => navData.isActive ? cssModule.active : undefined}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialog","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Message_messages__rBcLI\",\"message\":\"Message_message__95aWl\"};","import cssModule from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={cssModule.message}>\r\n            {props.text}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import {Form, Formik,Field} from \"formik\";\r\nimport {maxLengthValidator} from \"../../../utils/validators/textLengthValidation\";\r\nimport {requiredValidator} from \"../../../utils/validators/requiredValidation\";\r\nimport Input from \"../../Common/Inputs/Input\";\r\nimport {validatorMiddleware} from \"../../../utils/helpers/validatorMiddleware\";\r\n\r\nconst NewMessageForm = () => {\r\n    return (\r\n        <Formik\r\n            initialValues={{newMessageText : \"\"}}\r\n            onSubmit={(values) => {alert(JSON.stringify(values, null, 2));}}>\r\n            {(props) => (\r\n                <Form>\r\n                    <Field\r\n                        type=\"newMessageText\"\r\n                        name=\"newMessageText\"\r\n                        placeholder=\"Write your message here\"\r\n                        component={Input}\r\n                        validate={validatorMiddleware([requiredValidator,maxLengthValidator(5),maxLengthValidator(10)])}/>\r\n                    <button type=\"submit\">Submit</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default NewMessageForm;","import React from \"react\";\r\nimport cssModule from \"./Dialogs.module.css\"\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Navigate} from \"react-router-dom\"\r\nimport NewMessageForm from \"./Message/NewMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let onSubmit = (formData) => {\r\n        props.onSendMessageClick(formData.newMessageText);\r\n    };\r\n\r\n    if(!props.isAuthorized) return <Navigate to={\"/login\"} />\r\n\r\n    return (\r\n        <div className={cssModule.dialogs}>\r\n            <div>\r\n                { props.dialogs.map(x => <Dialog key={x.id} id={x.id} name={x.name}/>) }\r\n            </div>\r\n            <div>\r\n                { props.messages.map(x => <Message key={x.id} id={x.id} text={x.text} />) }\r\n                <NewMessageForm />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import {addMessageActionCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages:state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSendMessageClick : (newMessageText) => {\r\n            let action = addMessageActionCreator(newMessageText);\r\n            dispatch(action)\r\n        },\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);\r\n\r\n","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuthorized: state.auth.isAuthorized,\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n    let componentWithRedirect = (props) => {\r\n        if(!props.isAuthorized)\r\n            return <Navigate to={\"/login\"} />\r\n        return <Component {...props} />\r\n    };\r\n\r\n    let connectedProfileContainerWithAuth = connect(mapStateToPropsRedirect)(componentWithRedirect);\r\n    return connectedProfileContainerWithAuth;\r\n}","export const validatorMiddleware = (validators) => {\r\n    return (value) => {\r\n        let errors = {};\r\n        for (let i = 0; i < validators.length; i++) {\r\n            let validateResult = validators[i](value);\r\n            if (validateResult) {\r\n                let validateResultTrimmed = validateResult.split(' ').join('');\r\n                errors[validateResultTrimmed] = validateResult;\r\n            }\r\n        }\r\n        return Object.keys(errors).length > 0 ? errors : undefined;\r\n    }\r\n}","export const requiredValidator = (value) => {\r\n    if(!value)\r\n        return \"Value is required\";\r\n\r\n    return undefined;\r\n}","\r\nexport const maxLengthValidator = (maxLength) => {\r\n    return (text) => {\r\n        if(text.length > maxLength)\r\n            return `Max length is ${maxLength} symbols`\r\n        return undefined;\r\n    }\r\n}\r\n"],"names":["_ref","field","_ref$form","form","touched","errors","props","_objectWithoutProperties","_excluded","isErrorsDefined","Object","keys","length","isTouchDefined","isFieldWithErrors","name","style","concat","cssModule","_jsxs","className","children","_jsx","ValidationErrors","FormControl","_objectSpread","arrayOfErrorsText","error","push","map","x","path","id","NavLink","to","navData","isActive","undefined","text","Formik","initialValues","newMessageText","onSubmit","values","alert","JSON","stringify","Form","Field","type","placeholder","component","Input","validate","validatorMiddleware","requiredValidator","maxLengthValidator","isAuthorized","dialogs","Dialog","messages","Message","NewMessageForm","Navigate","compose","connect","state","dialogsPage","dispatch","onSendMessageClick","action","addMessageActionCreator","withAuthRedirect","Dialogs","mapStateToPropsRedirect","auth","Component","validators","value","i","validateResult","split","join","maxLength"],"sourceRoot":""}